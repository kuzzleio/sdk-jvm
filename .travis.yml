---
env:
  global:
  - AWS_ACCESS_KEY_ID=AKIAIYAXFUAHXOWP2MJA
  # AWS_SECRET_ACCESS_KEY
  - secure: k5YOQNkG2TFu+25EM9DPaNIgNW8HatpQAcTcsS3LDWeNWFUNhl+iz5KB1tWsWz5tpkvDsT2zLMj5286Xeo8N0uup0VgsIM5H2EbUxsKSlJGgE2ffX7xydzsgljBPXBSs8XsPlBsUxZzOuCo3CSDZnsTdwZfICeubaeBj7q9lqv46PHRJNrLRtOywfM/RLNtU0zh4ujRY+EYgbB+HZ4fnSSnzy9vLCqlvnqtXGwYbK7Q21DQTuXKkgbHLH1pOlycLfm8bMp5zZjDsaO9Mtnl+h2eqjBlr654TpvtRCyaBO2Y3AYKMg1gXDSDKGebt+3O3GZVYePBgqQQ44sQ1ZdyXsFibU/3rDRb9pXBa1g8VLspHJOg8Oy3k0E+nOSsYvmAQqLbF9w27CwW2PXztWrD7bt3LuhDlLhFKH3+s4R03OLGMVCZQZ+qPpC4fxPk+LeQNhCap16RgMs5/L3Qp+hn8x42pp1VtodNmPkYBWvrToaRFqMdY0Yj0BrkFkILZ7NUqtgrjxxDQx83hcsH6JyDoFRtw7AzPV3y3x9tmbg1sRQ5V069w7scHKbkjclWMnA1WS+yRg10DbBjJAjbH4Lf2LpUBaSb6Bt6YckJ8SduqDX/5KhQjxqGzPUiXGNUfh8Om46LS2Y3qz7c639ObkSXBt07rh3+NegeHM3ZbZQXEb00=
  # BINTRAY_USER
  - secure: J9nNMLhR7aeEonnEkQ1vkZnUw3iSPBn8z4zVjTOGHnJ5KWWqgAjW0v9RKAp8eWRXPGCAs6/4HxM/O7JpXHuMbJ7efE0l2F6KOfKAaDbnqZAdYIk3O8uHaToiP3ZX006iEBtx7iZh1G9OYnDUzCHYFI2neCBB0xpj0q89A4b7M8F0P7xGsphaE9BJeFqfa3N0Jfx3x/rosfuWpEAufXi/D2DWjJs/09i+Dj//Y5Q56UH3SA/m6MbGwOtRohrOQtkqUL4b/+SyY2p67B7VVJZQHQg9QH1CknnpdivQRDTxa+c06RtqxqQo9VqqNPm9xDoKvZgpAVgHc8CfH/E49kb/OYzi4GJjvRXOghZUj5kJEbq5GyP95SU9zX+8v7/m64R9UfwuLRnZwdgcX/Vcc3vNrxzIhP4U93d4VPOFbUdJCOvz0fE17ySlwWjOwRCKFs7X6IQoKqrNKiX8JN2BBrcACdPEXzhZNC6wIhdw7Z6Rbnq4jKRxf6u9lo69md/EDh/sqk2o/42DJyu7G4JrP4FtbAB5ljzb1gZJzGg2w5HS83cnqxfdasDp/XuRXfBFY2NkZYr1amQqsdoKQ2RnTEXb0JK2QIP6THT9GhLLTrhmecIjcX7UuRFDbqb/RiKn2VfUamXrbJ8ImXHy7ThNSo/4rDxDUXBNQlHtMLBR6yL6kiU=
  # BINTRAY_KEY
  - secure: 3yIP1AG+yNA36ztrTFO1zEdSPoDTD/6Ek6N5H7qnGw8MCWjUiDqNqypBNVIBF3BHkXhWPgP/W9ezSlYVC+bVeByK9/f53/s1gTTIypSymgGjLeSV7MtcGCwiv2YGMbFa855FlQlnlkf3OxybTHncXtKvQe0jhzJdt8ofVpmEJQl+OS69BY680+ABL3uKClWxQPhN8AVjHACDsSaiHKBWQGQScMloH6JcLIig0uIRENS994C21wUbaQiWXhKvThuu4bcgMgzTdi/PdDHobEBNkuPl/3W4MVYCIGYb9z+phTitUsqxZP5MbpEr/mihAKhy2Ez3d7+0FALRAEsyRiEDf58PBgmbKN/aERU210QO2TLY9d6TiDQxEub9szMGitv6taK6vL8/sEk6XTEvlmxQz3h5NOQ8eY6KTVAP9qT6RrBvS6yu1Rd8KZGpUQJwzdkkHtrnQ6eAFRNFb0BXMcAdVM115oMlTuqRcrz2hedWiJX8mOFIzLrkflhYpjImMJIOAZcMUYRtvKTZh75BQzpgWRrYLPs1q67PuEAzNn0Y7wKbpR5hOJxxDSlNDLrbvpy3gbWy3w5K9lUNjofCeaaU5pRL0jEEhWcWan3xJiJebtQ5oJ11wBi3A2lpHd/G4IYZ9g5wXgXS2f4HfEoiTVIshw2wp6nWgnwDS4IQw51PWVc=

job:
  include:
  - stage: Tests
    name: Unit tests SDK Kotlin
    jdk: openjdk8
    sudo: false
    before_cache:
    - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
    - rm -fr $HOME/.gradle/caches/*/plugin-resolution/
    cache:
      directories:
      - "$HOME/.gradle/caches/"
      - "$HOME/.gradle/wrapper/"
    install:
    - cd $TRAVIS_BUILD_DIR/
    script:
    - "./gradlew test"
  - stage: Tests
    name: Dead link check
    if: type = pull_request OR type = push AND branch =~ /^master|[0-9]+-(dev|stable)$/
      OR type = cron
    language: node_js
    node_js: 12
    before_script:
    - npm ci
    - npm run doc-prepare
    - "$(npm bin)/kuzdoc iterate-repos:install --repos_path doc/framework/.repos/"
    - "$(npm bin)/kuzdoc framework:link -d /sdk/java/3/ -v 3"
    script:
    - gem install typhoeus
    - cd doc/framework/ && HYDRA_MAX_CONCURRENCY=20 ruby .ci/dead-links.rb -p src/sdk/java/3/
  - stage: Tests
    name: Documentation Snippets
    if: type = pull_request OR type = push AND branch =~ /^master|[0-9]+-dev$/ OR
      type = cron
    language: node_js
    node_js: 12
    script: docker-compose -f .ci/doc/docker-compose.yml run doc-tests index
  - stage: Deployments
    name: Deploy documentation to next-docs.kuzzle.io
    if: type = push AND branch =~ /^[0-9]+-dev$/
    language: node_js
    node_js: 12
    env:
    - BRANCH=dev
    - NODE_ENV=production
    - S3_BUCKET=docs-next.kuzzle.io
    - CLOUDFRONT_DISTRIBUTION_ID=E2ZCCEK9GRB49U
    - AWS_DEFAULT_REGION=us-west-2
    addons:
      apt:
        update: true
        packages:
        - python
        - python-pip
    install:
    - pip install awscli --upgrade --user
    - npm ci
    script:
    - npm run doc-prepare
    - npm run doc-build
    deploy:
      provider: script
      script:
      - npm run doc-upload
      skip_cleanup: true
      on:
        all_branches: true
    after_deploy:
    - npm run doc-cloudfront
  - stage: Deployments
    name: Deploy documentation to docs.kuzzle.io
    if: type = push AND branch =~ /^master|[0-9]+-stable$/
    language: node_js
    node_js: 12
    env:
    - NODE_ENV=production
    - S3_BUCKET=docs.kuzzle.io
    - CLOUDFRONT_DISTRIBUTION_ID=E3D6RP0POLCJMM
    - AWS_DEFAULT_REGION=us-west-2
    addons:
      apt:
        packages:
        - python
        - python-pip
    install:
    - pip install awscli --upgrade --user
    - npm ci
    script:
    - npm run doc-prepare
    - npm run doc-build
    deploy:
      provider: script
      script:
      - npm run doc-upload
      skip_cleanup: true
      on:
        all_branches: true
    after_deploy:
    - npm run doc-cloudfront
  - stage: Deployments
    name: Deploy to Bintray
    if: branch = master AND type = push
    language: java
    jdk:
    - openjdk8
    deploy:
      provider: script
      script: "./gradlew bintrayUpload"
      skip_cleanup: true
      on:
        condition: "$TRAVIS_BRANCH = master"
stages:
- name: Tests
  if: type =~ /(cron|push|pull_request)/ AND branch =~ /^master|[0-9]+-(dev|stable)$/
- name: Builds
  if: type =~ /(cron|push|pull_request)/ AND branch =~ /^master|[0-9]+-(dev|stable)$/
- name: Deployments
  if: type =~ /(cron|push|pull_request)/ AND branch =~ /^master|[0-9]+-(dev|stable)$/
