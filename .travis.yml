---
env:
  global:
  # BINTRAY_USER
  - secure: "HLNf6BLT0RSUg88QIfigZXcd3bokg1OBFUs9xo31YJWZxbEpl/owcZe1Sb+ciIcknHfUoqI17qYwAMv7PEHTFN8xLqEg9kEFhxtXrCfqTsJJ/G2r9Rt4Cu5o+DN7bROB3HDptUS6LHwoLkIJhs4N7XfVC+k7lUrE1i2oPmwXZ2pkY/aicZnUMcxuxb90iC72nwJHofh8gOgECUqJrVvgGK9NKP6BZh74+ZiorVhzJcYRly+6MzcAiEZmTNk+edWOVcFkANDxENxWN/RpbKw836E2nNU0PqGL3t4mJUqS9CzgD/vqXRqWOgPJC4XMDH+RxO+ovd2F1ZKsd41GsurI0kiehKx6+7BpgYJ5GhCdzaxoFYAkOhp7ditj/dvizk3Fn33evK/kFBrAJ6440fIgDrfvmp+n8QZfeEd8dxENqmAhlSzVoAyNfWto1WL3CtPonPXniOqVvfiY5Z85aJE1BJ1Pp1g5ZyU1cCHvrtZWBjpLEu67bU+Ysh/lstWQrKOaisvQikNfla+ZAxe8KkK9cd13QPbksTFSEoUbbuA+m/2xrvX08X0sJ+AU97qXf6pdK2F7jYP5bVW6+I7pUvTcQDwHQ46ILZYc1W5wF1EQM4NA0yJuSl1E/XLY4OFB58otCbnbi2R79mISrle9AJlD6dri2+6ikq2BdGqOwhw33A8="
  # BINTRAY_KEY
  - secure: "RBYTt6rQyZXj68DlLTIhF5COl+8ec1QUPl5oZsi3hcfznBK6Ds6Ji3qB2xHutPQf+eAnBo4LMt1gcEEoFK5syHwUKA2Q2ybI53a1CcT3+Idy5ixcFcKIEoKZwEzPxCdfcbEFStY89TXK4dQKzr90mbraEx6A6fuR90dpLg2NoeEpDEVGFeK1NWyZsxrwOUnPhEtCnTqU40EXoHQunUfhL+qP4o6DEqJKGz5YuH0+tQ3yP/A/P7DcB9E6MTVilqJUwPO4yc52KoiiC/ZyVq7UX2mOWFOqRJg1CKmdfXJfjGRLyBx2YJrZp9jhTkDX/BfSIzlarLm4mfoFmrU7VJUIf95/arJttdTemzg1UAVBBQUton6XVWMuBGbCczdTh/A9H25QtKOXLK00B31mODOlKt9upA1k3dBsf7ew0Saoj0sU/0Z+Dfy+fCi9Gl88RtDrWVr8lfNlIgiyUBDS63fI0CQasbrX40PdP09WztTJ5L7SWlTcpMlUwOl30ZqTrKCMV2Avg+hO9RP0DWq6cqCiJnX8ai01Mb9pME6MqNU+u/hPrOij81OGxPrlOkJkSlWbayjSFasQCy2IPlFAYDu63FtJ/F9ny2Dl4XivNgkyLyUOHto4YKASbDIGHAW6oYFnqls7XXYZx0aL4+TmoCFX3bVgaaV2xBIXwjlh9BzwaLk="
  - AWS_ACCESS_KEY_ID=AKIAIYAXFUAHXOWP2MJA
  # AWS_SECRET_ACCESS_KEY
  - secure: "T3v562wdsZydb4UpmYpnrUlaVNkR/Mp+Hjqmz9UnXUwE1GZbixTCDYIEZqDUsdfrsHDhQZ0ae3E2RZe7TVgcl25Iq6LfTkG7+gBrWUFyCxT7MWE+OcySmesitLAkYDVupRTNYrikSsJjByc5tA6JbeZE1B3FQ/mU1Gfg2w7pFciY27daMPK/llkAuDRnD5tJOVlSpcVZWORkWAVQSu2enyxwUw6dtysv9ecQi983HwwlzUiNfQJPAaKWXu0tT/DnADJRUqz0KG5yq4/7Yrb4CwzFY9+hyxOaSCyYJOq4VGSm4imKjBzILj0cCSmutlySYbYF1iBENluYtJehGvOoUj07MF0bjiahkEEtmiuMxS8BPO6SL1DkAjO8ERGy4jXot5ZyMtQIBlA+mSl/8+lP6LypVhzJagbgNCeqDIlLqML7WyWiaZLnkws78sGqmJ+h/CoIT6fWsV3Iq1nYDJOuc8rFFHAGexcjNob1kE1jwP3qIW5LdWI33tP7Ss7vgiSPQQdh7TVIj+WRV0uhFJxYZM7FjsC+JWZlRjkBZIl5i6WzLE1eVD1e3vQAnFibZxvnak+n5lNvDKR1fNCbf/TR6M7LWFubCFNpBQPOXbYNHlu2INYMgxD1a1A5oZP47rVxU9udfAJQR+BHJm3j2PcqvnYI4K+d01JUBCSXDhbLlvg="

job:
  include:
  - stage: Tests
    name: Unit tests SDK Kotlin
    jdk: openjdk8
    sudo: false
    before_cache:
    - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
    - rm -fr $HOME/.gradle/caches/*/plugin-resolution/
    cache:
      directories:
      - "$HOME/.gradle/caches/"
      - "$HOME/.gradle/wrapper/"
    install:
    - cd $TRAVIS_BUILD_DIR/
    script:
    - "./gradlew test"
  - stage: Tests
    name: Dead link check
    if: type = pull_request OR type = push AND branch =~ /^master|[0-9]+-(dev|stable)$/
      OR type = cron
    language: node_js
    node_js: 12
    before_script:
    - npm ci
    - npm run doc-prepare
    - "$(npm bin)/kuzdoc iterate-repos:install --repos_path doc/framework/.repos/"
    - "$(npm bin)/kuzdoc framework:link -d /sdk/java/3/ -v 3"
    script:
    - gem install typhoeus
    - cd doc/framework/ && HYDRA_MAX_CONCURRENCY=20 ruby .ci/dead-links.rb -p src/sdk/java/3/
  - stage: Tests
    name: Documentation Snippets
    if: type = pull_request OR type = push AND branch =~ /^master|[0-9]+-dev$/ OR
      type = cron
    language: node_js
    node_js: 12
    script: docker-compose -f .ci/doc/docker-compose.yml run doc-tests index
  - stage: Deployments
    name: Deploy documentation to next-docs.kuzzle.io
    if: type = push AND branch =~ /^[0-9]+-dev$/
    language: node_js
    node_js: 12
    env:
    - BRANCH=dev
    - NODE_ENV=production
    - S3_BUCKET=docs-next.kuzzle.io
    - CLOUDFRONT_DISTRIBUTION_ID=E2ZCCEK9GRB49U
    - AWS_DEFAULT_REGION=us-west-2
    addons:
      apt:
        update: true
        packages:
        - python
        - python-pip
    install:
    - pip install awscli --upgrade --user
    - npm ci
    script:
    - npm run doc-prepare
    - npm run doc-build
    deploy:
      provider: script
      script:
      - npm run doc-upload
      skip_cleanup: true
      on:
        all_branches: true
    after_deploy:
    - npm run doc-cloudfront
  - stage: Deployments
    name: Deploy documentation to docs.kuzzle.io
    if: type = push AND branch =~ /^master|[0-9]+-stable$/
    language: node_js
    node_js: 12
    env:
    - NODE_ENV=production
    - S3_BUCKET=docs.kuzzle.io
    - CLOUDFRONT_DISTRIBUTION_ID=E3D6RP0POLCJMM
    - AWS_DEFAULT_REGION=us-west-2
    addons:
      apt:
        packages:
        - python
        - python-pip
    install:
    - pip install awscli --upgrade --user
    - npm ci
    script:
    - npm run doc-prepare
    - npm run doc-build
    deploy:
      provider: script
      script:
      - npm run doc-upload
      skip_cleanup: true
      on:
        all_branches: true
    after_deploy:
    - npm run doc-cloudfront
  - stage: Deployments
    name: Deploy to Bintray
    if: branch = master AND type = push
    language: java
    jdk:
    - openjdk8
    deploy:
      provider: script
      script: "./gradlew bintrayUpload"
      skip_cleanup: true
      on:
        condition: "$TRAVIS_BRANCH = master"
stages:
- name: Tests
  if: type =~ /(cron|push|pull_request)/ AND branch =~ /^master|[0-9]+-(dev|stable)$/
- name: Builds
  if: type =~ /(cron|push|pull_request)/ AND branch =~ /^master|[0-9]+-(dev|stable)$/
- name: Deployments
  if: type =~ /(cron|push|pull_request)/ AND branch =~ /^master|[0-9]+-(dev|stable)$/
